# Enhanced Node Server Nginx Configuration
# Production-ready reverse proxy with load balancing

# Main server configuration
upstream enhanced_node_backend {
    # Multiple server instances for load balancing
    server 127.0.0.1:5000 weight=3 max_fails=3 fail_timeout=30s;
    server 127.0.0.1:5001 weight=2 max_fails=3 fail_timeout=30s backup;
    
    # Health check
    keepalive 32;
    keepalive_requests 100;
    keepalive_timeout 60s;
}

upstream enhanced_node_metrics {
    server 127.0.0.1:8091 max_fails=2 fail_timeout=30s;
}

upstream enhanced_node_websocket {
    # WebSocket-specific upstream
    server 127.0.0.1:5000;
    
    # WebSocket settings
    ip_hash;  # Ensure session persistence for WebSocket connections
}

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=auth_limit:10m rate=1r/s;
limit_req_zone $binary_remote_addr zone=metrics_limit:10m rate=5r/s;

# Connection limiting
limit_conn_zone $binary_remote_addr zone=conn_limit:10m;

# Caching
proxy_cache_path /var/cache/nginx/enhanced_node levels=1:2 keys_zone=enhanced_node_cache:10m max_size=100m inactive=60m use_temp_path=off;

# Main HTTP server
server {
    listen 80;
    server_name enhancednode.com www.enhancednode.com;
    
    # Security headers
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

# Main HTTPS server
server {
    listen 443 ssl http2;
    server_name enhancednode.com www.enhancednode.com;
    
    # SSL Configuration
    ssl_certificate /etc/nginx/ssl/enhancednode.com.crt;
    ssl_certificate_key /etc/nginx/ssl/enhancednode.com.key;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers on;
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdnjs.cloudflare.com; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' https://cdnjs.cloudflare.com; connect-src 'self' wss: ws:; frame-ancestors 'none';" always;
    
    # Basic settings
    client_max_body_size 50M;
    client_body_timeout 30s;
    client_header_timeout 30s;
    send_timeout 30s;
    
    # Connection limiting
    limit_conn conn_limit 20;
    
    # Logging
    access_log /var/log/nginx/enhanced_node_access.log combined;
    error_log /var/log/nginx/enhanced_node_error.log warn;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Main dashboard and static content
    location / {
        # Rate limiting
        limit_req zone=api_limit burst=20 nodelay;
        
        # Proxy settings
        proxy_pass http://enhanced_node_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Buffering
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 16 4k;
        proxy_busy_buffers_size 8k;
        
        # Caching for static dashboard content
        proxy_cache enhanced_node_cache;
        proxy_cache_valid 200 5m;
        proxy_cache_valid 404 1m;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        proxy_cache_background_update on;
        proxy_cache_lock on;
        
        # Add cache status header
        add_header X-Cache-Status $upstream_cache_status;
    }
    
    # API endpoints
    location /api/ {
        # Stricter rate limiting for API
        limit_req zone=api_limit burst=10 nodelay;
        
        # Proxy to backend
        proxy_pass http://enhanced_node_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # API timeouts
        proxy_connect_timeout 10s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # No caching for API calls
        proxy_no_cache 1;
        proxy_cache_bypass 1;
        
        # API headers
        add_header X-API-Version "3.4.0" always;
        add_header X-Node-ID $upstream_http_x_node_id always;
    }
    
    # Authentication endpoints (stricter limits)
    location ~ ^/api/v[0-9]+/agents/(register|heartbeat)$ {
        limit_req zone=auth_limit burst=5 nodelay;
        
        proxy_pass http://enhanced_node_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Shorter timeouts for auth
        proxy_connect_timeout 5s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }
    
    # WebSocket endpoint
    location /socket.io/ {
        proxy_pass http://enhanced_node_websocket;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket timeouts
        proxy_connect_timeout 10s;
        proxy_send_timeout 3600s;
        proxy_read_timeout 3600s;
        
        # WebSocket buffering
        proxy_buffering off;
        
        # Session persistence
        proxy_cache off;
    }
    
    # Metrics endpoint (restricted access)
    location /metrics {
        # Restrict to monitoring systems
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        allow 127.0.0.1;
        deny all;
        
        limit_req zone=metrics_limit burst=3 nodelay;
        
        proxy_pass http://enhanced_node_metrics;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        
        # Short timeout for metrics
        proxy_connect_timeout 5s;
        proxy_send_timeout 10s;
        proxy_read_timeout 10s;
    }
    
    # Health check endpoint
    location /health {
        proxy_pass http://enhanced_node_backend/api/v3/node/stats;
        proxy_set_header Host $host;
        
        # Quick health check
        proxy_connect_timeout 2s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
        
        # No caching for health checks
        proxy_no_cache 1;
        proxy_cache_bypass 1;
        
        # Return only status
        access_log off;
    }
    
    # Static assets (if serving any)
    location /static/ {
        alias /opt/enhanced-node/static/;
        expires 1d;
        add_header Cache-Control "public, immutable";
        
        # Gzip for static files
        gzip_static on;
    }
    
    # Robots.txt
    location /robots.txt {
        return 200 "User-agent: *\nDisallow: /api/\nDisallow: /metrics\nDisallow: /admin/\n";
        add_header Content-Type text/plain;
    }
    
    # Security.txt
    location /.well-known/security.txt {
        return 200 "Contact: security@enhancednode.com\nExpires: 2025-12-31T23:59:59.000Z\nPreferred-Languages: en\n";
        add_header Content-Type text/plain;
    }
    
    # Deny access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~ \.(yml|yaml|json|conf|env)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
}

# Monitoring dashboard (Grafana)
server {
    listen 443 ssl http2;
    server_name monitoring.enhancednode.com;
    
    ssl_certificate /etc/nginx/ssl/enhancednode.com.crt;
    ssl_certificate_key /etc/nginx/ssl/enhancednode.com.key;
    
    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options SAMEORIGIN always;
    add_header X-Content-Type-Options nosniff always;
    
    # Basic auth for monitoring
    auth_basic "Enhanced Node Monitoring";
    auth_basic_user_file /etc/nginx/.htpasswd;
    
    location / {
        proxy_pass http://127.0.0.1:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# API-only server (for agents)
server {
    listen 443 ssl http2;
    server_name api.enhancednode.com;
    
    ssl_certificate /etc/nginx/ssl/enhancednode.com.crt;
    ssl_certificate_key /etc/nginx/ssl/enhancednode.com.key;
    
    # Security headers for API
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Content-Type-Options nosniff always;
    
    # API rate limiting
    limit_req zone=api_limit burst=50 nodelay;
    
    # Only serve API endpoints
    location /api/ {
        proxy_pass http://enhanced_node_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # API-optimized timeouts
        proxy_connect_timeout 5s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }
    
    # WebSocket for real-time communication
    location /socket.io/ {
        proxy_pass http://enhanced_node_websocket;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_buffering off;
        proxy_cache off;
    }
    
    # Deny everything else
    location / {
        return 404;
    }
}
